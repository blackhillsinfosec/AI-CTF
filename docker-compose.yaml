services:
  bedrock-gateway:
    build:
      context: .
      dockerfile: Dockerfile.bedrock
    container_name: bedrock-gateway
    ports:
      - "${BEDROCK_PORT:-8081}:80"
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION:-us-east-1}
      - AWS_REGION=${AWS_REGION:-us-east-1}
      - API_KEY=${BEDROCK_API_KEY:-bedrock}
      - DEBUG=true
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:80/health', timeout=5)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
  ollama:
    build:
      context: .
      dockerfile: Dockerfile.ollama
    container_name: ollama
    volumes:
      - ollama:/root/.ollama
    ports:
      - "${OLLAMA_PORT:-11434}:11434"
    environment:
      - OLLAMA_DEBUG=1
    restart: unless-stopped
  open-webui:
    build:
      context: .
      dockerfile: Dockerfile.openwebui
    container_name: open-webui
    volumes:
      - open-webui:/app/backend/data
    ports:
      - "${OPENWEBUI_PORT:-4242}:8080"
    environment:
      - OLLAMA_BASE_URL=http://ollama:11434
      - WEBUI_SECRET_KEY=
      - ENABLE_RAG_WEB_SEARCH=false
      - ENABLE_SIGNUP=true
      - DEFAULT_USER_ROLE=user
      - ENABLE_ADMIN_EXPORT=true
      - ENABLE_COMMUNITY_SHARING=false
      - ENABLE_API_KEY=true
      - ENABLE_MESSAGE_RATING=false
      - CTF_FLAG_CHALLENGE_8=${CTF_FLAG_CHALLENGE_8}  # Added this line
    restart: unless-stopped
    depends_on:
      - ollama
      - pipelines
  pipelines:
    image: ghcr.io/open-webui/pipelines:main
    container_name: pipelines
    volumes:
      - pipelines:/app/pipelines
    ports:
      - "${PIPELINES_PORT:-9099}:9099"
    environment:
      - PIPELINES_ENV=production
    restart: unless-stopped
  jupyter:
    build:
      context: .
      dockerfile: Dockerfile.jupyter
    container_name: jupyter
    ports:
      - "${JUPYTER_PORT:-8888}:8888"
    environment:
      - JUPYTER_ENABLE_LAB=yes
      - JUPYTER_TOKEN=${JUPYTER_TOKEN:-AntiSyphonBlackHillsTrainingFtw!}
      - CTF_FLAG_CHALLENGE_7=${CTF_FLAG_CHALLENGE_7}
    volumes:
      - jupyter-work:/home/jovyan/work
    restart: unless-stopped
    command: start-notebook.sh --NotebookApp.token='${JUPYTER_TOKEN:-AntiSyphonBlackHillsTrainingFtw!}'
  ctf-setup:
    build:
      context: .
      dockerfile: Dockerfile.ctfsetup
    container_name: ctf-setup
    environment:
      # Copy all environment variables for substitution
      - CTF_ADMIN_EMAIL=${CTF_ADMIN_EMAIL}
      - CTF_ADMIN_PASSWORD=${CTF_ADMIN_PASSWORD}
      - CTF_ADMIN_NAME=${CTF_ADMIN_NAME}
      - CTF_USER_EMAIL=${CTF_USER_EMAIL}
      - CTF_USER_PASSWORD=${CTF_USER_PASSWORD}
      - CTF_USER_NAME=${CTF_USER_NAME}
      - OPENWEBUI_URL=${OPENWEBUI_URL}
      - JUPYTER_PORT=${JUPYTER_PORT}
      - JUPYTER_TOKEN=${JUPYTER_TOKEN}
      - PIPELINES_PORT=${PIPELINES_PORT}
      - CTF_FLAG_CHALLENGE_1=${CTF_FLAG_CHALLENGE_1}
      - CTF_FLAG_CHALLENGE_2=${CTF_FLAG_CHALLENGE_2}
      - CTF_FLAG_CHALLENGE_3=${CTF_FLAG_CHALLENGE_3}
      - CTF_FLAG_CHALLENGE_4=${CTF_FLAG_CHALLENGE_4}
      - CTF_FLAG_CHALLENGE_5=${CTF_FLAG_CHALLENGE_5}
      - CTF_FLAG_CHALLENGE_6=${CTF_FLAG_CHALLENGE_6}
      - CTF_FLAG_CHALLENGE_7=${CTF_FLAG_CHALLENGE_7}
      - CTF_FLAG_CHALLENGE_8=${CTF_FLAG_CHALLENGE_8}
      - CTF_FLAG_CHALLENGE_9=${CTF_FLAG_CHALLENGE_9}
      - CTF_FLAG_CHALLENGE_10=${CTF_FLAG_CHALLENGE_10}
      - CTF_FLAG_CHALLENGE_11=${CTF_FLAG_CHALLENGE_11}
    depends_on:
      open-webui:
        condition: service_healthy
      ollama:
        condition: service_started
      jupyter:
        condition: service_started
      pipelines:
        condition: service_started  
    restart: "no"
volumes:
  ollama:
  open-webui:
  pipelines:
  jupyter-work: